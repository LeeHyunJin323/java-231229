class Student {
    // private 접근 제어
    private String name;
    private int age;
    private int score;

    // score(점수) 필드를 선언 - private
    // : 해당 필드에 대한 getter setter 구현
    // : 점수 값을 설정할 때는 0보다 크고 100보다 작은지 확인하는 검사 코드도 추가
    // : 유효하지 않은 점수일 경우 '유효하지 않습니다.' 출력

    public int getScore() {
        return score;
    }

    public void setScore(int score) {
        if (score > 0 && score < 100) {
            this.score = score;
        } else {
            System.out.println("유효하지 않습니다.");
        }
    }

    // getter & setter - 캡슐화되어 있는 데이터에 접근
    // 메서드 형식을 get변수 , set변수로 지정하는 것을 권장
    // : 해당 메서드의 구현목적에 대한 설명
    public String getName() {
        // private 선언이 되어있는 name변수는 반드시 getName 메서드를 통해서만
        // , 외부 클래스 또는 외부 패키지에서 접근이 가능
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }
}

public class B_Encapsulation {

    public static void main(String[] args) {

        Student student1 = new Student();
        // setter를 통한 데이터 설정
        student1.setName("이승아");
        student1.setAge(28);
        student1.setScore(85);

        // getter를 통한 데이터 접근 및 출력
        System.out.println(student1.getScore());
        System.out.println(student1.getName());
        System.out.println(student1.getAge());
    }
}
